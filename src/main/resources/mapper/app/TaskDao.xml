<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.app.dao.task.TaskDao">

    <sql id="taskDtoField">
        t.*,
        <!-- a.id AS address_id,-->
        a.latitude AS address_latitude,
        a.longitude AS address_longitude,
        a.detail AS address_detail,
        <!-- m.id AS creator_id,-->
        m.nick_name AS creator_nick_name,
        m.real_name AS creator_real_name,
        m.avatar AS creator_avatar,
        m.self_intro AS creator_self_intro,
        m.mobile AS creator_mobile,
        m.sex AS creator_sex,
        m.level AS creator_level
        <!--    ri.image_url,
            tg.name AS tag_name-->
    </sql>

    <sql id="searchTaskCondition">
        <if test="queryMap.keyword !=null and queryMap.keyword != ''">
            AND t.title like concat('%',#{queryMap.keyword},'%')
        </if>
        <if test="queryMap.difficulty!=null and queryMap.difficulty != ''">
            <choose>
                <when test="queryMap.difficulty =='FREE'">
                    AND t.virtual_currency = #{queryMap.maxVirtualCurrency}
                </when>
                <when test="queryMap.difficulty == 'SIMPLE'">
                    AND t.virtual_currency &gt;= #{queryMap.minVirtualCurrency}
                    AND t.virtual_currency &lt;= #{queryMap.maxVirtualCurrency}
                </when>
                <when test="queryMap.difficulty =='NORMAL'">
                    AND t.virtual_currency &gt;= #{queryMap.minVirtualCurrency}
                    AND t.virtual_currency &lt;= #{queryMap.maxVirtualCurrency}
                </when>
                <when test="queryMap.difficulty =='DIFFICULT'">
                    AND t.virtual_currency &gt; #{queryMap.maxVirtualCurrency}
                </when>
            </choose>
        </if>
        <if test="queryMap.minLat != null and queryMap.maxLat != null
                 and queryMap.minLng!=null and queryMap.maxLng != null">
            AND a.latitude &gt;= #{queryMap.minLat} AND a.latitude &lt;= #{queryMap.maxLat}
            AND a.longitude &gt;= #{queryMap.minLng} AND a.longitude &lt;= #{queryMap.maxLng}
        </if>
    </sql>
    <!--任务banner resultMap-->
    <resultMap type="io.renren.modules.app.dto.TaskBannerDto" id="taskBannerMap">
        <association property="task" javaType="io.renren.modules.app.entity.task.TaskEntity">
            <id property="id" column="id"/>
            <result property="title" column="title"/>
            <result property="completeTime" column="complete_time"/>
            <result property="virtualCurrency" column="virtual_currency"/>
        </association>
        <!--关联地址-->
        <association property="address" javaType="io.renren.modules.app.entity.task.TaskAddressEntity">
            <id property="id" column="address_id"/>
            <result property="latitude" column="address_latitude"/>
            <result property="longitude" column="address_longitude"/>
            <result property="detail" column="address_detail"/>
        </association>
        <!--关联任务完成人-->
        <association property="receiver" javaType="io.renren.modules.app.entity.setting.Member">
            <id property="id" column="completer_id"/>
            <result property="nickName" column="completer_nick_name"/>
            <result property="realName" column="completer_real_name"/>
            <result property="avatar" column="completer_avatar"/>
            <result property="sex" column="completer_sex"/>
            <result property="mobile" column="completer_mobile"/>
        </association>
        <!--标签名称列表-->
        <!--<collection property="tagNames" ofType="string">
            <constructor>
                <arg column="tag_name"/>
            </constructor>
        </collection>-->
    </resultMap>
    <!--任务resultMap-->
    <resultMap type="io.renren.modules.app.dto.TaskDto" id="taskMap">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>
        <result property="startTime" column="start_time"/>
        <result property="expireTime" column="expire_time"/>
        <result property="createTime" column="create_time"/>
        <result property="virtualCurrency" column="virtual_currency"/>
        <result property="status" column="status"/>
        <result property="likeCount" column="like_count"/>
        <result property="commentCount" column="comment_count"/>
        <!--关联地址-->
        <association property="address" javaType="io.renren.modules.app.entity.task.TaskAddressEntity">
            <id property="id" column="address_id"/>
            <result property="latitude" column="address_latitude"/>
            <result property="longitude" column="address_longitude"/>
            <result property="detail" column="address_detail"/>
        </association>
        <!--关联创建人-->
        <association property="creator" javaType="io.renren.modules.app.entity.setting.Member">
            <id property="id" column="creator_id"/>
            <result property="nickName" column="creator_nick_name"/>
            <result property="realName" column="creator_real_name"/>
            <result property="avatar" column="creator_avatar"/>
            <result property="selfIntro" column="creator_self_intro"/>
            <result property="mobile" column="creator_mobile"/>
            <result property="sex" column="creator_sex"/>
            <result property="level" column="creator_level"/>
        </association>
        <!--关联领取人-->
        <association property="receiver" javaType="io.renren.modules.app.entity.setting.Member">
            <id property="id" column="receiver_id"/>
            <result property="nickName" column="receiver_nick_name"/>
            <result property="realName" column="receiver_real_name"/>
            <result property="avatar" column="receiver_avatar"/>
            <result property="sex" column="receiver_sex"/>
            <result property="mobile" column="receiver_mobile"/>
        </association>
        <!--图片url列表-->
        <collection property="imageUrls" ofType="string">
            <constructor>
                <arg column="image_url"/>
            </constructor>
        </collection>
        <!--标签名称列表-->
        <collection property="tagNames" ofType="string">
            <constructor>
                <arg column="tag_name"/>
            </constructor>
        </collection>
    </resultMap>

    <!--searchTaskMap-->
    <resultMap type="io.renren.modules.app.dto.TaskDto" id="searchTaskMap">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>
        <result property="startTime" column="start_time"/>
        <result property="expireTime" column="expire_time"/>
        <result property="createTime" column="create_time"/>
        <result property="virtualCurrency" column="virtual_currency"/>
        <result property="status" column="status"/>
        <result property="likeCount" column="like_count"/>
        <result property="commentCount" column="comment_count"/>
        <!--关联地址-->
        <association property="address" javaType="io.renren.modules.app.entity.task.TaskAddressEntity">
            <id property="id" column="address_id"/>
            <result property="latitude" column="address_latitude"/>
            <result property="longitude" column="address_longitude"/>
            <result property="detail" column="address_detail"/>
        </association>
        <!--关联创建人-->
        <association property="creator" javaType="io.renren.modules.app.entity.setting.Member">
            <id property="id" column="creator_id"/>
            <result property="nickName" column="creator_nick_name"/>
            <result property="realName" column="creator_real_name"/>
            <result property="avatar" column="creator_avatar"/>
            <result property="sex" column="creator_sex"/>
        </association>
        <!--图片url列表-->
        <collection property="imageUrls" ofType="string">
            <constructor>
                <arg column="image_url"/>
            </constructor>
        </collection>
        <!--标签名称列表-->
        <collection property="tagNames" ofType="string">
            <constructor>
                <arg column="tag_name"/>
            </constructor>
        </collection>
    </resultMap>
    <!--receivedTaskMap-->
    <resultMap type="io.renren.modules.app.dto.TaskDto" id="receivedTaskMap">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>
        <result property="startTime" column="start_time"/>
        <result property="expireTime" column="expire_time"/>
        <result property="createTime" column="create_time"/>
        <result property="receiveTime" column="receive_time"/>
        <result property="virtualCurrency" column="virtual_currency"/>
        <result property="status" column="status"/>
        <result property="likeCount" column="like_count"/>
        <result property="commentCount" column="comment_count"/>
        <!--关联地址-->
        <association property="address" javaType="io.renren.modules.app.entity.task.TaskAddressEntity">
            <id property="id" column="address_id"/>
            <result property="latitude" column="address_latitude"/>
            <result property="longitude" column="address_longitude"/>
            <result property="detail" column="address_detail"/>
        </association>
        <!--关联创建人-->
        <association property="creator" javaType="io.renren.modules.app.entity.setting.Member">
            <id property="id" column="creator_id"/>
            <result property="nickName" column="creator_nick_name"/>
            <result property="realName" column="creator_real_name"/>
            <result property="avatar" column="creator_avatar"/>
            <result property="sex" column="creator_sex"/>
            <result property="level" column="creator_level"/>
        </association>
        <!--图片url列表-->
        <collection property="imageUrls" ofType="string">
            <constructor>
                <arg column="image_url"/>
            </constructor>
        </collection>
        <!--标签名称列表-->
        <collection property="tagNames" ofType="string">
            <constructor>
                <arg column="tag_name"/>
            </constructor>
        </collection>
    </resultMap>


    <!--查询任务详情-->
    <select id="getTask" resultMap="taskMap">
        SELECT
        <include refid="taskDtoField"/>,
        ri.image_url,
        tg.name AS tag_name,
        r.id AS receiver_id,
        r.nick_name AS receiver_nick_name,
        r.real_name AS receiver_real_name,
        r.avatar AS receiver_avatar,
        r.sex AS receiver_sex,
        r.mobile AS receiver_mobile
        FROM t_task t
        JOIN t_task_address a ON t.address_id = a.id
        JOIN member m ON t.creator_id = m.id
        LEFT JOIN r_task_image ri ON t.id = ri.task_id
        LEFT JOIN r_task_tag rg ON t.id = rg.task_id
        JOIN t_task_tag tg ON rg.tag_id=tg.id
        LEFT JOIN t_task_receive tr ON t.id = tr.task_id AND tr.status != 'published' AND tr.deleted = 0
        LEFT JOIN member r ON tr.receiver_id = r.id
        WHERE t.id = #{taskId}
    </select>

    <select id="getPublishedTasks" resultMap="searchTaskMap">

        select task.* ,
        ri.image_url,
        tg.name AS tag_name
        from(
        SELECT
        <include refid="taskDtoField"/>
        FROM t_task t
        JOIN t_task_address a ON t.address_id = a.id
        JOIN member m ON t.creator_id = m.id
        WHERE t.creator_id = #{publisherId} AND t.deleted = 0
        ORDER BY t.create_time DESC
        LIMIT #{page.offset},#{page.limit}
        )AS task
        LEFT JOIN r_task_image ri ON task.id = ri.task_id
        LEFT JOIN r_task_tag rg ON task.id = rg.task_id
        JOIN t_task_tag tg ON rg.tag_id=tg.id
    </select>

    <select id="publishCount" resultType="int">
        SELECT
        count(1)
        FROM t_task t
        WHERE t.creator_id = #{publisherId} and t.deleted = 0
    </select>

    <!--用户领取的任务列表-->
    <select id="getReceivedTasks" resultMap="receivedTaskMap">
        select task.*,
        ri.image_url,
        tg.name AS tag_name
        from(
        SELECT
        <include refid="taskDtoField"/>,
        <!--任务领取时间-->
        re.create_time AS receive_time
        FROM t_task_receive re
        JOIN t_task t ON t.id = re.task_id
        JOIN t_task_address a ON t.address_id = a.id
        JOIN member m ON t.creator_id = m.id
        WHERE re.receiver_id = #{receiverId} and t.deleted = 0
        ORDER BY re.create_time desc
        LIMIT #{page.offset},#{page.limit}
        ) AS task
        LEFT JOIN r_task_image ri ON task.id = ri.task_id
        LEFT JOIN r_task_tag rg ON task.id = rg.task_id
        JOIN t_task_tag tg ON rg.tag_id=tg.id
    </select>


    <select id="receiveCount" resultType="int">
        SELECT
        count(1)
        FROM t_task t
        JOIN t_task_receive re ON t.id = re.task_id
        WHERE re.receiver_id = #{receiverId} and t.deleted = 0
    </select>


    <select id="searchTasks" parameterType="map" resultMap="searchTaskMap">
        select task.* ,
        ri.image_url,
        tg.name AS tag_name
        from (
        SELECT
        <include refid="taskDtoField"/>
        FROM t_task t
        JOIN t_task_address a ON t.address_id = a.id
        JOIN member m ON t.creator_id = m.id
        WHERE
        <if test="queryMap.tagIds != null and queryMap.tagIds.size() > 0">
            EXISTS (select 1 from t_task_tag tag,r_task_tag r
                    where tag.id=r.tag_id and r.task_id=t.id and tag.id  in
                <foreach collection="queryMap.tagIds" item="tagId" index="index" open="(" close=")" separator=",">
                    #{tagId}
                </foreach>
            )
            and
        </if>
        t.deleted = 0 AND t.status = 'published'
        <include refid="searchTaskCondition"/>
        ORDER BY t.create_time desc
        LIMIT #{page.offset},#{page.limit}
        ) AS task
        LEFT JOIN r_task_image ri ON task.id = ri.task_id
        LEFT JOIN r_task_tag rg ON task.id = rg.task_id
        JOIN t_task_tag tg ON rg.tag_id=tg.id

    </select>

    <!--获取任务总数-根据查询条件-->
    <select id="count" resultType="int">
        SELECT
        count(1)
        FROM t_task t
        JOIN t_task_address a ON t.address_id = a.id
        WHERE
        <if test="queryMap.tagIds != null and queryMap.tagIds.size() > 0">
            EXISTS (select 1 from t_task_tag tag,r_task_tag r
                where tag.id=r.tag_id and r.task_id=t.id and tag.id  in
            <foreach collection="queryMap.tagIds" item="tagId" index="index" open="(" close=")" separator=",">
                #{tagId}
            </foreach>
            )
            and
        </if>
        t.deleted = 0 AND t.status = 'published'
        <include refid="searchTaskCondition"/>

    </select>


    <select id="isReceiveableTask" resultType="int">
          SELECT
            COUNT(1)
            FROM t_task t
            WHERE NOT EXISTS
                (SELECT 1 FROM t_task_receive re WHERE t.id = re.task_id AND re.receiver_id = #{receiverId})
                AND t.deleted = 0 AND t.status = 'published' AND t.id= #{taskId}
    </select>


    <select id="isChooseableReceiver" resultType="int">
          SELECT
            COUNT(1)
            FROM t_task t
            JOIN t_task_receive re ON re.task_id = t.id AND t.status = 'published' AND re.status='published'
            WHERE  t.id= #{taskId} AND re.receiver_id = #{receiverId}
    </select>

    <select id="isExecutableTask" resultType="int">
          SELECT
            COUNT(1)
            FROM t_task t
            JOIN t_task_receive re ON re.task_id = t.id AND t.status = 'received' AND re.status='received'
            WHERE  t.deleted = 0 AND t.id= #{taskId} AND re.receiver_id = #{receiverId}
    </select>


    <select id="isSubmitableTask" resultType="int">
        SELECT
        COUNT(1)
        FROM t_task t
        JOIN t_task_receive re ON t.id = re.task_id AND t.status = 'executing' AND re.status='executing'
        WHERE t.deleted = 0 AND t.id=#{taskId} AND re.receiver_id = #{receiverId}
    </select>

    <select id="isCompletableTask" resultType="int">
        SELECT
        COUNT(1)
        FROM t_task t
        JOIN t_task_receive re ON t.id = re.task_id AND t.status='submitted'
        WHERE t.deleted = 0 AND t.id=#{taskId} AND re.receiver_id = #{receiverId}
    </select>

    <insert id="insertTaskImageRelation">
        INSERT INTO r_task_image(task_id,image_url) VALUES
        <foreach collection="imageUrls" item="item" index="index" separator=",">
            (#{taskId}, #{item})
        </foreach>
    </insert>

    <insert id="insertTaskTagRelation">
        INSERT INTO r_task_tag(task_id,tag_id) VALUES
        <foreach collection="tagIds" item="item" index="index" separator=",">
            (#{taskId}, #{item})
        </foreach>
    </insert>

<!--    <insert id="insertTaskNotifiedUserRelation">
        INSERT INTO r_task_notified_user(task_id,user_id) VALUES
        <foreach collection="userIds" item="item" index="index" separator=",">
            (#{taskId}, #{item})
        </foreach>
    </insert>-->

    <select id="getTaskBanners" resultMap="taskBannerMap">
        select
        t.*,
        a.id AS address_id,
        a.latitude AS address_latitude,
        a.longitude AS address_longitude,
        a.detail AS address_detail,
        m.id AS completer_id,
        m.nick_name AS completer_nick_name,
        m.real_name AS completer_real_name,
        m.avatar AS completer_avatar,
        m.sex AS completer_sex
        <!--        tg.name AS tag_name-->
        from t_task t
        JOIN t_task_receive re ON t.id = re.task_id
        JOIN t_task_address a ON t.address_id = a.id
        JOIN member m ON re.receiver_id = m.id
        <!-- LEFT JOIN r_task_tag rg ON t.id = rg.task_id
         JOIN t_task_tag tg ON rg.tag_id=tg.id-->
        WHERE t.deleted = 0 AND t.status = 'completed'
        ORDER BY t.complete_time DESC
        LIMIT 0,15

    </select>

    <select id="getTaskReceivers" resultType="io.renren.modules.app.dto.MemberDto">
        select m.* from t_task_receive re
        join member m on re.receiver_id = m.id and m.status=1
        where re.task_id = #{taskId}
        order by re.create_time asc
        limit #{page.offset},#{page.limit}
    </select>

    <select id="receiverCount" resultType="int">
        select count(1) from t_task_receive re
        join member m on re.receiver_id = m.id and m.status =1
        where re.task_id = #{taskId}
    </select>

</mapper>